interface Semigroup<A> {
    fun ~SA.combine~combine(a : A, b : A) : A
}

fun <A> ~funcombine~combine(a : A, b : A) : A = a

fun plus(a : Int, b : Int, with semigroup : Semigroup<Int>) : Int = `SA.combine`combine(a, b)

fun plus2(a : Int, b : Int, semigroup : Semigroup<Int>) : Int = `funcombine`combine(a, b)

fun plus3(a : Int, b : Int, semigroup : Semigroup<Int>) : Int = with(semigroup) { `SA.combine`combine(a, b) }